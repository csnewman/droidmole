syntax = "proto3";

option go_package = "./protocol";

import "google/protobuf/empty.proto";

service AgentController {
  rpc streamState(google.protobuf.Empty) returns (stream AgentState);

  rpc startEmulator(StartEmulatorRequest) returns (google.protobuf.Empty);

  rpc streamDisplay(StreamDisplayRequest) returns (stream DisplayFrame) {}

  rpc streamSysShell(google.protobuf.Empty) returns (stream SysShellEntry) {}

  rpc sendInput(TouchEvent) returns (google.protobuf.Empty) {}
}

message AgentState {
  enum EmulatorState {
    ERROR = 0;
    OFF = 1;
    STARTING = 2;
    RUNNING = 3;
  }

  EmulatorState emulator_state = 1;
}

// Recommended Settings:
// Ram: 2048 Cores: 1
// Display 720x1280 320dpi
message StartEmulatorRequest {
  int32 ram_size = 1;
  int32 core_count = 2;

  int32 lcd_density = 3;
  int32 lcd_width = 4;
  int32 lcd_height = 5;
}

message StreamDisplayRequest {
  // The maximum number of frames to encode per second.
  // Extra frames will be dropped, with the most recent frame encoded every 1/max_fps seconds.
  // Set to 0 to disable limit.
  uint32 max_fps = 1;

  // How often in milliseconds to encode a keyframe.
  // Set to 0 to only send when required.
  uint32 keyframe_interval = 2;
}

message DisplayFrame {
  bool keyframe = 1;
  int32 width = 2;
  int32 height = 3;
  bytes data = 4;
}

message SysShellEntry {
  string line = 1;
}

message TouchEvent {
  repeated Touch touches = 1;
}

message Touch {
  int32 identifier = 1;

  int32 x = 2;
  int32 y = 3;

  int32 pressure = 4;
  int32 touch_major = 5;
  int32 touch_minor = 6;
}
